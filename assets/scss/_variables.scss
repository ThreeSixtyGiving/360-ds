// [Breakpoints]
$small-only: '(max-width: 35.98em)';
$medium: '(min-width: 36em)';
$medium-only: '(min-width: 36em) and (max-width: 59.98em)';
$medium-max: '(max-width: 59.98em)';
$regular: '(min-width: 60em)';
$regular-only: '(min-width: 60em) and (max-width: 84.98em)';
$large: '(min-width: 85em)';
$large-only: '(min-width: 85em) and (max-width: 104.98em)';
$x-large: '(min-width: 105em)';

// Temp Variables
$medium-up: $medium;
$touch: $medium-max;


@import 'breakpoints';

// Colours Absolute - Base
$black: #153634;
$orange: #DE6E26;
$teal: #4DACB6;
$yellow: #EFC329;
$red: #BC2C26;
$white: white;

// Text Safe Colors
$teal-dark: #3A8188;
$orange-dark: #A7531D;
$yellow-dark: #B3921F;

// Secondary Colors
$success: #00571d;
$warning: #EFC329;
$error: #BC2C26;


// Colours Relative
$main-color: $orange;
$base-color: $black;


:root {
    --text-base-size: 1rem;
    --text-base-line-height: 1.62;

    --fonts-primary: 'Roboto', sans-serif;
    
    // Maintaining these Variables here, for the Fractal internal use. 
    --colors-default: $black;
    --colors-white: #FFFFFF;
    --colors-orange: $orange;
    --colors-teal: $teal;
    --colors-yellow: $yellow;
    --colors-red: $red;

    --colors-alt: --colors-teal;
    --colors-black: --colors-default;

    @include breakpoint($regular) {
        // Edited this variable from 1.25rem.
        --text-base-size: 1rem;
    }
}

:root {
  // $black: #153634;
  // $orange: #DE6E26;
  // $teal: #4DACB6;
  // $yellow: #EFC329;
  // $red: #BC2C26;
  // $white: white;
  
  // All these variables are HSLA color mode. 
  // They are intentionally not calling the HSLa() function, 
  // so we can have the option to call them inside the components
  // tweaking the alpha value when necessary.
  // IMPORTANT: Notice that we need the "_hsl.scss" plugin
  // to override the native HSL functions of sass. 
  // This prevents a bug between Sass' and Natives HSL function 
  // implementation and usage.

  // Gray Scale
  --gray-05-hsl: 0, 0%, 95%;
  --gray-10-hsl: 0, 0%, 90%;
  --gray-20-hsl: 0, 0%, 80%;
  --gray-30-hsl: 0, 0%, 70%;
  --gray-70-hsl: 0, 0%, 30%;
  --gray-80-hsl: 0, 0%, 20%;
  --black-hsl:   0, 0%, 10%;
  
  // Secondary Palette
  --success-green-hsl:  140, 100%, 17%;
  --error-red-hsl:        5,  81%, 95%;
  --warning-yellow-hsl:  45, 78%, 98%;

  // Theme Color - Prototype (HSLa)
  --black-hsl:    243, 75%,  6%;
  --orange-hsl:    23, 74%, 51%;
  --teal-hsl:     186, 42%, 51%;
  --yellow-hsl:    47, 86%, 55%;
  --red-hsl:        2, 66%, 44%;

  // Accessible Colours
  --teal-dark-hsl: 185, 40%, 38%;
  --orange-dark-hsl: 23, 73%, 44%;
  
--yellow-dark-hsl: 47, 86%, 33%;

  // Hierarchy Prototypes / Alises
  --default-hsl: var(--black-hsl);
  --primary-hsl: var(--orange-hsl);
  --accent-hsl:  var(--teal-hsl);
  
  // Color Values for End Users
  // Already calling the color functions.
  
  // Secondary Palette
  --color-error:   hsla(var(--red-hsl), 1);
  --color-warning: hsla(var(--yellow-hsl), 1);
  --color-success: hsla(var(--success-green-hsl), 1);

  // Primary Palette
  --color-black:    hsla(var(--black-hsl),   1);
  --color-orange:   hsla(var(--orange-hsl),  1);
  --color-teal:     hsla(var(--teal-hsl),   1);
  --color-yellow:   hsla(var(--yellow-hsl), 1);
  --color-red:      hsla(var(--red-hsl),    1);
  
  --color-orange-dark: hsla(var(--orange-dark-hsl), 1);
  --color-teal-dark:   hsla(var(--teal-dark-hsl),   1);
  --color-yellow-dark: hsla(var(--yellow-dark-hsl), 1);

  // Color Hierarchy
  --color-default: hsla(var(--black-hsl),   1);
  --color-primary: hsla(var(--orange-hsl),   1);
  --color-accent:  hsla(var(--teal-hsl), 1);

  // Aliases
  --base-hsl: var(--default-hsl);
  --color-base: var(--color-default);
}

.clearfix:after {
   content: " "; /* Older browser do not support empty content */
   visibility: hidden;
   display: block;
   height: 0;
   clear: both;
}

.u-material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
}

.u-transition { transition: all .4s ease; }

@mixin placeholder {
  // This mixin isn't working.
  &::-webkit-input-placeholder { @content }
  &:-moz-placeholder { @content }
  &::-moz-placeholder { @content }
  &:-ms-input-placeholder { @content }
}

.small-only { @include breakpoint($medium) { display: none !important; } }
.medium-up { @include breakpoint($small-only) { display: none !important; } }


.fadein {
  // The attributes for these transitions are controlled directly in the scripts.js
  &--from-right { }
  &--from-left { }
  &--from-top { }
  &--from-bottom { }
}

